
create or replace PROCEDURE truncate_table(P_TABLE VARCHAR2) AUTHID DEFINER  AS 
BEGIN
  EXECUTE IMMEDIATE 'TRUNCATE TABLE PKD.' || P_TABLE || ' DROP STORAGE';
END truncate_table;

create or replace PROCEDURE drop_table(P_TABLE VARCHAR2) AUTHID DEFINER  AS 
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE PKD.' || P_TABLE || '';
END drop_table;

CREATE OR REPLACE PROCEDURE record_error(PRC VARCHAR2) AUTHID DEFINER  AS 

   PRAGMA AUTONOMOUS_TRANSACTION;
   l_mesg  VARCHAR2(32767) := SQLERRM;
 
BEGIN

	EXECUTE IMMEDIATE' INSERT INTO logging (created_on, info, proc_name, message, backtrace)
	VALUES (TO_CHAR(CURRENT_TIMESTAMP, ''YYYY.MM.DD HH24:MI:SS.FF''), ''ERROR'', '''|| PRC ||''', '''|| l_mesg ||''', sys.DBMS_UTILITY.format_error_backtrace)';
		
		
   COMMIT;
END;



-- PACKAGE 

create or replace PACKAGE CFC AUTHID CURRENT_USER AS 
TYPE T_AGAZAT_IMP IS TABLE OF VARCHAR2(5 CHAR) INDEX BY PLS_INTEGER;
TYPE T_PIM_INPUT IS TABLE OF VARCHAR2(20 CHAR) INDEX BY PLS_INTEGER;
TYPE t_pim IS TABLE OF VARCHAR2(30 CHAR) INDEX BY PLS_INTEGER;
TYPE t_szektor_list IS TABLE OF VARCHAR2(30 CHAR) INDEX BY PLS_INTEGER;

procedure create_pim(AKT_EV VARCHAR2, SZEKT VARCHAR2, ALSZEKT VARCHAR2, ESZKOZ VARCHAR2, v_inv2_table VARCHAR2, v_lifetime_table VARCHAR2, v_arindex_1999 VARCHAR2, v_szektor VARCHAR2, v_eszkozcsp VARCHAR2, v_alszektor VARCHAR2);
procedure sector_unite(AKT_EV VARCHAR2, ESZKOZ VARCHAR2, ALSZEKTOR VARCHAR2);

END CFC;
